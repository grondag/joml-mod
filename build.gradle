import net.fabricmc.loom.task.RemapJarTask

plugins {
	id "fabric-loom" version "1.0-SNAPSHOT"
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "joml-mod"
group = "grondag"

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	
	include "org.joml:joml:1.10.5"
}

shadowJar {
	classifier = "shadow"
	configurations = [project.configurations.shadow]
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	//baseName = "Jankson"
	from "LICENSE"
}

publishing {
	publications {
		maven(MavenPublication) {
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") { //release jar - file location not provided anywhere in loom
				classifier null
				builtBy remapJar
			}

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

    repositories {
        maven {
            url "https://grondag-repo.appspot.com"
            credentials {
				if (project.hasProperty('maven_user')){
					username = project.getProperty('maven_user')
				}
				if (project.hasProperty('maven_password')){
					password = project.getProperty('maven_password')
				}
			}
        }
        maven {
            url 'sftp://dblsaiko.net:22/srv/http/maven/'
            credentials {
				if (project.hasProperty('maven_user_2')){
					username = project.getProperty('maven_user_2')
				}
				if (project.hasProperty('maven_password_2')){
					password = project.getProperty('maven_password_2')
				}
			}
        }
    }
}