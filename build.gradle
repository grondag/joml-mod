import net.fabricmc.loom.task.RemapJarTask

plugins {
	id 'fabric-loom' version '0.2.5-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '5.0.0'
	id "org.ajoberstar.grgit" version "3.1.1"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "joml-mod"
group = "grondag"
def version_tag = 'joml_version'

if (grgit == null) {
	version = '99.0.0-nogit'
} else if (project.hasProperty(version_tag)) {
	if(grgit.status().isClean()) {
		version = project.getProperty(version_tag) + '.' + grgit.log().size() + '+' + project.minecraft_version
	} else {
		version = project.getProperty(version_tag) + '.' + (grgit.log().size() + 1) + '-snapshot+' + project.minecraft_version
	}
} else {
	version = '99.0.0-local'
}

minecraft {
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
	
	shadow "org.joml:joml:1.9.19"
}

task jar(type: Jar, overwrite: true) {
	classifier = "compile"
	from compileJava
	from processResources
}

shadowJar {
	classifier = "shadow"
	configurations = [project.configurations.shadow]
}

task remapJar(type: net.fabricmc.loom.task.RemapJarTask, overwrite: true) {
	dependsOn shadowJar
	from zipTree(shadowJar.archiveFile)

	classifier = "release"
	//	input = shadowJar.archiveFile
	//	classifier = "release"
	//output = file("build/libs/${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar")
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	//baseName = "Jankson"
	from "LICENSE"
}

publishing {
	publications {
		maven(MavenPublication) {
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") { //release jar - file location not provided anywhere in loom
				classifier null
				builtBy remapJar
			}

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

    repositories {
        maven {
            url "https://grondag-repo.appspot.com"
            credentials {
				if (project.hasProperty('maven_user')){
					username = project.getProperty('maven_user')
				}
				if (project.hasProperty('maven_password')){
					password = project.getProperty('maven_password')
				}
			}
        }
    }
}